{"version":3,"file":"transform.js","sourceRoot":"","sources":["../src/transform.ts"],"names":[],"mappings":";AACA,+BAAiC;AACjC,2BAA6B;AAE7B,IAAI,GAAkB,CAAC;AAEvB,IAAM,cAAc,GAAG,UAAC,KAAa;IACjC,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,IAAM,SAAS,GAAiB,UAAC,OAA4B,EAAE,QAA8B;IAEzF,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;QACb,OAAO,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KACrC;IAED,IAAI,KAAK,GAAG,KAAK,CAAC;IAElB,IAAM,gBAAgB,GAAG,iCAAiC,CAAC;IAC3D,IAAM,cAAc,GAAG,uBAAuB,CAAC;IAC/C,IAAM,iBAAiB,GAAG,gBAAgB,CAAC;IAE3C,IAAM,UAAU,GAAG,UAAC,MAAc;QAE9B,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAEjD,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QAED,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACvB,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAEtF,IAAI,OAAO,GAAG,QAAQ,CAAC;QACvB,IAAI,iBAAiB,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,OAAO,iBAAiB,EAAE;YAEtB,IAAM,cAAc,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,mBAAmB,EAAE,cAAc,CAAC,CAAC;YACjG,GAAG,CAAC,KAAK,CAAC,0BAA0B,EAAE,cAAc,EAAE,GAAG,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE7E,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,iBAAiB,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrD;QAED,OAAO,CAAC,EAAE,CAAC,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzE,KAAK,GAAG,IAAI,CAAC;IACjB,CAAC,CAAC;IAEF,UAAU,CAAC,cAAc,CAAC,CAAC;IAC3B,UAAU,CAAC,gBAAgB,CAAC,CAAC;IAE7B,OAAO,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEF,IAAM,UAAU,GAA2B,UAAC,UAA4C;IACpF,MAAM,CAAC,SAAS,CAAC;QACb,SAAS,EAAE,UAAU,CAAC,SAAS;QAC/B,UAAU,EAAE;YACR,OAAO,EAAE;gBACL,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC5C,KAAK,EAAE,UAAU,CAAC,KAAK;aAC1B;SACJ;KACJ,CAAC,CAAC;IACH,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,qCAAqC,CAAC,CAAC;AAClE,CAAC,CAAC;AAEF,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,UAAU,YAAA,EAAE,CAAC,CAAC;AACrD,iBAAS,GAAG,CAAC","sourcesContent":["import * as kt from \"karma-typescript\";\nimport * as log4js from \"log4js\";\nimport * as path from \"path\";\n\nlet log: log4js.Logger;\n\nconst fixWindowsPath = (value: string): string => {\n    return value.replace(/\\\\/g, \"/\");\n};\n\nconst transform: kt.Transform = (context: kt.TransformContext, callback: kt.TransformCallback) => {\n\n    if (!context.ts) {\n        return callback(undefined, false);\n    }\n\n    let dirty = false;\n\n    const templateUrlRegex = /templateUrl:\\s(['\"][^\"']*['\"])/g;\n    const styleUrlsRegex = /styleUrls:\\s\\[(.*)\\]/g;\n    const quotedStringRegex = /[\"'](.*?)[\"']/g;\n\n    const rewriteUrl = (regexp: RegExp) => {\n\n        const match = regexp.exec(context.ts.transpiled);\n\n        if (!match) {\n            return;\n        }\n\n        const original = match[0];\n        const value = match[1];\n        const templateDir = path.dirname(context.filename);\n        const relativeTemplateDir = path.relative(context.config.karma.basePath, templateDir);\n\n        let pattern = original;\n        let quotedStringMatch = quotedStringRegex.exec(value);\n\n        while (quotedStringMatch) {\n\n            const unquotedString = quotedStringMatch[1];\n            const url = path.join(context.config.karma.urlRoot, \"base\", relativeTemplateDir, unquotedString);\n            log.debug(\"Rewriting %s to %s in %s\", unquotedString, url, context.filename);\n\n            pattern = pattern.replace(unquotedString, fixWindowsPath(url));\n            quotedStringMatch = quotedStringRegex.exec(value);\n        }\n\n        context.ts.transpiled = context.ts.transpiled.replace(original, pattern);\n        dirty = true;\n    };\n\n    rewriteUrl(styleUrlsRegex);\n    rewriteUrl(templateUrlRegex);\n\n    return callback(undefined, dirty, false);\n};\n\nconst initialize: kt.TransformInitialize = (logOptions: kt.TransformInitializeLogOptions) => {\n    log4js.configure({\n        appenders: logOptions.appenders,\n        categories: {\n            default: {\n                appenders: Object.keys(logOptions.appenders),\n                level: logOptions.level\n            }\n        }\n    });\n    log = log4js.getLogger(\"angular2-transform.karma-typescript\");\n};\n\nconst exp = Object.assign(transform, { initialize });\nexport = exp;\n"]}